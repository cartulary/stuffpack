/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not exceed four million.
*/

#include <iostream>
#include <math.h>

int main (void)
{
	/* set these to the right values to get the correct start pattern */
	 long double sum = 0;
	 long double fib_total =1;
	 long double last_term = 0;
	 long double second_last_term = 0;
	for ( long double i = 0; i <= 50; ++i)
	{
		second_last_term = last_term;
		last_term = fib_total;
		fib_total = last_term + second_last_term;
		std::cout << fib_total;
		if (fmod(fib_total,2) == 0 && fib_total <= 4000000)
		{
			sum+= fib_total;
			std::cout << "*";
		}
		std::cout << " ";
	}
	std::cout << std::endl << sum;
	return 0;
}
